{"version":3,"file":"static/js/24.b38cce6f.chunk.js","mappings":"0YAGaA,EAAWC,EAAAA,EAAAA,GAAH,gEAKRC,EAAmBD,EAAAA,EAAAA,OAAH,+SAUlBE,EAAAA,EAAAA,aAIWC,EAAAA,EAAAA,SAITD,EAAAA,EAAAA,kBAIAE,EAAYJ,EAAAA,EAAAA,IAAH,kIASTK,EAAiBL,EAAAA,EAAAA,IAAH,sKAWdM,EAAYN,EAAAA,EAAAA,GAAH,uHAMTE,EAAAA,EAAAA,aAIAK,EAAYP,EAAAA,EAAAA,GAAH,6CAITQ,EAAkBR,EAAAA,EAAAA,GAAH,uKAMT,qBAAGS,cAAmC,MAAtC,IAMNC,EAAkBV,EAAAA,EAAAA,GAAH,kTAIjBE,EAAAA,EAAAA,mBASeA,EAAAA,EAAAA,kBAMbS,EAAkBX,EAAAA,EAAAA,OAAH,+TAQjBE,EAAAA,EAAAA,aACWA,EAAAA,EAAAA,YAKWC,EAAAA,EAAAA,SAITD,EAAAA,EAAAA,iB,0FC9GXU,EAAiBZ,EAAAA,EAAAA,QAAH,8HAKhBE,EAAAA,EAAAA,iBACWA,EAAAA,EAAAA,a,6ICLTW,EAAab,EAAAA,EAAAA,KAAH,gIAQVc,EAAYd,EAAAA,EAAAA,MAAH,iJAOXE,EAAAA,EAAAA,gBAGEa,EAAYf,EAAAA,EAAAA,MAAH,gOAKAE,EAAAA,EAAAA,iBAOTA,EAAAA,EAAAA,kBASAc,GALWhB,EAAAA,EAAAA,SAAH,iEAECE,EAAAA,EAAAA,cAGYF,EAAAA,EAAAA,IAAH,yNAOnB,qBAAGiB,aAAiC,MAApC,KAQCC,GAAelB,EAAAA,EAAAA,GAAOe,EAAPf,CAAH,qRAOKE,EAAAA,EAAAA,yBASjBiB,GAAenB,EAAAA,EAAAA,GAAOW,EAAAA,GAAPX,CAAH,yF,8BCxEZoB,EAAmBC,EAAAA,KAAaC,MAAM,CACjDC,MAAOF,EAAAA,GAAW,+BAA+BG,cACjDC,MAAOJ,EAAAA,GAAW,0BAA0BG,cAC5CE,YAAaL,EAAAA,GAAW,4BAA4BG,cACpDG,UAAWN,EAAAA,GAAW,4BAA4BG,gBCJvCI,E,2OAASC,KAAU,SAAAC,GAAI,MAAK,CAAEC,MAAOD,EAAME,MAAOF,EAA3B,IACvBG,EAAgB,CAC3B,CAAEF,MAAO,GAAIC,MAAO,IACpB,CAAED,MAAO,GAAIC,MAAO,IACpB,CAAED,MAAO,GAAIC,MAAO,IACpB,CAAED,MAAO,GAAIC,MAAO,IACpB,CAAED,MAAO,GAAIC,MAAO,IACpB,CAAED,MAAO,GAAIC,MAAO,IACpB,CAAED,MAAO,GAAIC,MAAO,IACpB,CAAED,MAAO,GAAIC,MAAO,IACpB,CAAED,MAAO,GAAIC,MAAO,IACpB,CAAED,MAAO,IAAKC,MAAO,MCbVE,EAAiB,SAAAH,GAC5B,OAAOI,OAAOJ,EAAMK,QAAQ,IAAK,IAClC,EAEYC,EAAgB,SAAAN,GAC3B,IAAMO,EAAeJ,EAAeH,GAEpC,OAAKO,GAA0B,KAAVP,EAIdI,OAAOG,GAAcC,eAAe,SAHlC,EAIV,E,uDC2FD,EAzFe,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACtB,GAAiEC,EAAAA,EAAAA,IAAQ,CACvEC,cAAe,CAAEpB,MAAO,GAAIE,MAAO,GAAIC,YAAa,GAAIC,UAAW,IACnEiB,UAAUC,EAAAA,EAAAA,GAAYzB,KAFhB0B,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,QAASC,EAAzC,EAAyCA,UAAWC,EAApD,EAAoDA,SAIpD,GAEIC,EAAAA,EAAAA,IAAc,CAAEC,KAAM,QAASJ,QAAAA,IADjCK,MAAsCC,GADxC,EACWvB,MADX,EAC8BwB,UAA0BC,GADxD,YAGA,GAEIL,EAAAA,EAAAA,IAAc,CAAEC,KAAM,QAASJ,QAAAA,IADjCK,MAAsCI,GADxC,EACW1B,MADX,EAC8BwB,UAA0BG,GADxD,YAqBA,OACE,UAAC7C,EAAD,CAAY8C,SAAUZ,GAlBP,SAAC,GAAD,IAAGtB,EAAH,EAAGA,MAAOF,EAAV,EAAUA,MAAV,IAAiBG,YAAAA,OAAjB,MAA+B,EAA/B,EAAkCC,EAAlC,EAAkCA,UAAlC,OACfc,EACED,EACGoB,QAAO,gBAAG9B,EAAH,EAAGA,KAAH,OAAeP,EAAQO,IAASP,EAAQO,CAAxC,IACP8B,QAAO,YAAsB,IAAnBC,EAAkB,EAAlBA,YACT,OAAKpC,GACLoC,EAAc1B,OAAO0B,EAAYzB,QAAQ,IAAK,QAC9CX,EAAQU,OAAOV,IAFIoC,CAKpB,IACAD,QAAO,qBAAGE,QAAwB5B,EAAeR,EAA1C,IACPkC,QAAO,gBAAGE,EAAH,EAAGA,QAAH,OACNnC,EAAYmC,EAAU5B,EAAeP,GAAamC,CAD5C,IAZG,IAkBf,WACE,iBAAKC,UAAU,eAAf,WACE,SAACjD,EAAD,UAAW,eACX,SAAC,MAAD,kBACM0C,GADN,IAEEQ,gBAAgB,gBAChBT,SAAU,gBAAGxB,EAAH,EAAGA,MAAH,OAAeuB,EAAYvB,EAA3B,EACVkC,QAASrC,EACTsC,YAAY,wBAGhB,iBAAKH,UAAU,eAAf,WACE,SAACjD,EAAD,UAAW,oBACX,UAACE,EAAD,CAAoBC,YAAY,OAAhC,WACE,SAAC,MAAD,kBACMyC,GADN,IAEEM,gBAAgB,gBAChBT,SAAU,gBAAGxB,EAAH,EAAGA,MAAH,OAAe0B,EAAY1B,EAA3B,EACVkC,QAAShC,EACTiC,YAAY,OAEd,0BAAM,gBAGV,4BACE,SAACpD,EAAD,UAAW,sBACX,UAACE,EAAD,YACE,SAACE,GAAD,kBACM4B,EAAS,gBADf,IAEEiB,UAAU,OACVI,KAAK,OACLC,IAAK,EACLC,IAAKnC,EAAee,IAAYtB,YAAc,KAC9C2C,UAAW,EACXf,SAAU,gBAAGgB,EAAH,EAAGA,OAAH,OACRrB,EAAS,cAAeb,EAAckC,EAAOxC,OADrC,MAIZ,0BAAM,aAER,UAACf,EAAD,YACE,SAACE,GAAD,kBACM4B,EAAS,cADf,IAEEiB,UAAU,KACVI,KAAK,OACLC,IAAKlC,EAAee,IAAYvB,cAAgB,EAChD4C,UAAW,EACXf,SAAU,gBAAGgB,EAAH,EAAGA,OAAH,OACRrB,EAAS,YAAab,EAAckC,EAAOxC,OADnC,MAIZ,0BAAM,cAGV,SAACZ,EAAD,CAAcgD,KAAK,SAAnB,SAA4B,aAGjC,C,+GClGYK,EAAQxE,EAAAA,EAAAA,QAAH,iFAGPE,EAAAA,EAAAA,kBAGEuE,EAAmBzE,EAAAA,EAAAA,EAAH,iE,SCQ7B,EAbqB,SAAC,GAAkC,IAAhC0E,EAA+B,EAA/BA,SAA+B,IAArBd,OAAAA,OAAqB,SACrD,OACE,UAACY,EAAD,WACGZ,GACC,SAAC,MAAD,CAAoBe,KAAM,OAE1B,SAAC,MAAD,CAAkBA,KAAM,OAE1B,SAACF,EAAD,UAAmBC,MAGxB,C,sLCZYE,EAAW5E,EAAAA,EAAAA,IAAH,gOAYCE,EAAAA,EAAAA,oBAIT2E,EAAe7E,EAAAA,EAAAA,IAAH,uQAedE,EAAAA,EAAAA,iBACWA,EAAAA,EAAAA,c,SC/BhB4E,EAAYC,SAASC,cAAc,eA8BzC,EA5Bc,SAAC,GAA+B,IAA7BN,EAA4B,EAA5BA,SAAUO,EAAkB,EAAlBA,YACnBC,EAAoB,SAAAC,GAAU,IAAD,IAE/B,UAAAA,EAAMZ,OAAOa,eAAb,eAAsBC,WAA2B,WAAfF,EAAMG,OAGxCL,GAGH,EAWD,OATAM,EAAAA,EAAAA,YAAU,WAGR,OAFAC,OAAOC,iBAAiB,UAAWP,GACnCM,OAAOC,iBAAiB,QAASP,GAC1B,WACLM,OAAOE,oBAAoB,UAAWR,GACtCM,OAAOE,oBAAoB,QAASR,EACrC,CACF,KAEMS,EAAAA,EAAAA,eACL,SAACf,EAAD,CAAU,mBAAV,UACE,SAACC,EAAD,UAAeH,MAEjBI,EAEH,EC5BYc,EAAc5F,EAAAA,EAAAA,OAAH,6OAWFG,EAAAA,EAAAA,SAITD,EAAAA,EAAAA,kBAIA2F,EAAW7F,EAAAA,EAAAA,IAAH,oIAUR8F,GAAW9F,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,kEAKR+F,EAAiB/F,EAAAA,EAAAA,EAAH,wEAMdgG,EAAiBhG,EAAAA,EAAAA,GAAH,0FAMdiG,EAAiBjG,EAAAA,EAAAA,GAAH,mGAOdkG,EAAiBlG,EAAAA,EAAAA,GAAH,0NAKLE,EAAAA,EAAAA,sBAKTA,EAAAA,EAAAA,aAKAiG,EAAanG,EAAAA,EAAAA,EAAH,mWAUZE,EAAAA,EAAAA,aACWA,EAAAA,EAAAA,YAKWC,EAAAA,EAAAA,SAITD,EAAAA,EAAAA,kBChFxB,EAVuB,SAAC,GAAyC,IAAvCkG,EAAsC,EAAtCA,SAAsC,IAA5B3F,aAAAA,OAA4B,MAAb,OAAa,EAC9D,OACE,SAAC,KAAD,CAAiBA,aAAcA,EAA/B,SACG2F,EAASC,KAAI,SAACC,EAAMC,GAAP,OACZ,SAAC,KAAD,UAAqCD,GAAfA,EAAOC,EADjB,KAKnB,ECoFD,EA/EkB,SAAC,GAoBZ,IAAD,IAnBJC,IACEC,EAkBE,EAlBFA,GACA3E,EAiBE,EAjBFA,KACA4E,EAgBE,EAhBFA,IACA5C,EAeE,EAfFA,QACA6C,EAcE,EAdFA,UACAC,EAaE,EAbFA,YACAC,EAYE,EAZFA,iBACAhD,EAWE,EAXFA,YACAiD,EAUE,EAVFA,WACAC,EASE,EATFA,gBACA5C,EAQE,EARFA,KACA6C,EAOE,EAPFA,YACAC,EAME,EANFA,gBACAC,EAKE,EALFA,MACAC,EAIE,EAJFA,QACAC,EAGE,EAHFA,KAEFnC,EACI,EADJA,YAEMoC,EAAkBF,EAAQG,MAAM,MAEhCC,EAAa,CACjBF,EAAgBA,EAAgBG,OAAS,GACzCH,EAAgBA,EAAgBG,OAAS,GAFxB,cAGVf,GAHU,gBAIRW,GAJQ,gBAKRjD,GALQ,4BAMI4C,GANJ,uBAODD,IAGZW,EAAc,kBACfZ,EAAiBS,MAAM,OADR,mBAEPxD,GAFO,gBAGTD,KAGX,OACE,UAAC,EAAD,CAAOoB,YAAaA,EAApB,WACE,SAACW,EAAD,CAAazB,KAAK,SAASuD,QAASzC,EAApC,UACE,SAAC,MAAD,CAAgBN,KAAM,QAExB,SAACkB,EAAD,CAAU8B,IAAKhB,GAAaD,KAC5B,SAAC,KAAD,WACE,UAACZ,EAAD,WACGhE,GACD,4BAAM,IAAEoF,KAAa,KAAGE,QAG5B,SAACQ,EAAD,CAAgBxB,SAAUmB,EAAY9G,aAAa,UACnD,SAACsF,EAAD,UAAiBa,KACjB,SAACZ,EAAD,UAAgB,sCAChB,SAAC4B,EAAD,CACExB,SAAQ,kBAAMY,IAAN,OAAsBC,IAC9BxG,aAAa,UAEf,SAACuF,EAAD,UAAgB,wBAChB,SAACC,EAAD,UACGwB,EAAepB,KAAI,SAAAwB,GAClB,MAAqBA,EAAUP,MAAM,KAArC,eAAOQ,EAAP,KAAY/F,EAAZ,KACA,OACE,UAACmE,EAAD,WACG4B,EAAK,IACL/F,IACC,gCAAE,MACE,0BAAOA,EAAMK,QAAQ,wBAAyB,YAJjC0F,EASxB,OAEH,SAAC3B,EAAD,CAAY4B,KAAK,oBAAjB,SAAqC,iBAG1C,EC5EKC,EAAgBjD,SAASC,cAAc,QAAQiD,UAiFrD,EA/EgB,SAAC,GAgBV,IAAD,IAfJzB,IACEC,EAcE,EAdFA,GACA3E,EAaE,EAbFA,KACA4E,EAYE,EAZFA,IACA5C,EAWE,EAXFA,QACA6C,EAUE,EAVFA,UACAuB,EASE,EATFA,cACArE,EAQE,EARFA,YACAM,EAOE,EAPFA,KACA8C,EAME,EANFA,gBACAC,EAKE,EALFA,MACAC,EAIE,EAJFA,QACAC,EAGE,EAHFA,KAEFZ,EACI,EADJA,IAEA,GAA8B2B,EAAAA,EAAAA,KAAtBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,QAClB,GAA0CC,EAAAA,EAAAA,WAAS,GAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,EAAaL,EAASM,MAAK,SAAAlC,GAAG,OAAIA,EAAIC,KAAOA,CAAf,IAE9BkC,EAAkB,WACtBH,GAAiB,SAAAI,GAOf,OANIA,EACFZ,EAAca,OAAO,WAErBb,EAAcc,IAAI,YAGZF,CACT,GACF,EAUKvB,EAAkBF,EAAQG,MAAM,MAEhCC,EAAa,CACjBF,EAAgBA,EAAgBG,OAAS,GACzCH,EAAgBA,EAAgBG,OAAS,GACzCU,EACA/D,EACA+C,EACApD,EACAmD,EAAgB,GAAGK,MAAM,KAAKyB,MAAM,EAAG,GAAGC,KAAK,MAGjD,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAkB7E,KAAK,SAASuD,QAtBb,WAChBe,EAGHJ,EAAQ,kBAAmB7B,EAAIC,IAF/B4B,EAAQ,eAAgB7B,EAI3B,EAgBG,SACGiC,GACC,SAAC,MAAD,CAAaQ,MAAO/I,EAAAA,EAAAA,YAAoByE,KAAM,MAE9C,SAAC,KAAD,CAAgBA,KAAM,QAG1B,SAAC,KAAD,CAAWgD,IAAKhB,GAAaD,EAAKwC,IAAKpH,EAAMqH,MAAO,OACpD,UAAC,KAAD,YACE,UAAC,KAAD,WACGrH,GACD,4BAAM,IAAEoF,KAAa,KAAGE,MAE1B,SAAC,KAAD,UAAYvD,QAEd,SAAC+D,EAAD,CAAgBxB,SAAUmB,KAC1B,SAAC,KAAD,CAAiBpD,KAAK,SAASuD,QAASiB,EAAxC,SAAyD,eAGxDJ,IAAiB,SAAC,EAAD,CAAW/B,IAAKA,EAAKvB,YAAa0D,MAGzD,EC5FYS,EAAYpJ,EAAAA,EAAAA,GAAH,qGAOTqJ,EAAcrJ,EAAAA,EAAAA,OAAH,gUAObE,EAAAA,EAAAA,YAMWC,EAAAA,EAAAA,SAITD,EAAAA,EAAAA,kB,UCMb,EA5BiB,SAAC,GAAiB,IAAfoJ,EAAc,EAAdA,QAClB,GAAgChB,EAAAA,EAAAA,WAAS,GAAzC,eAAOiB,EAAP,KAAiBC,EAAjB,KAEMC,EAAeH,EAAQP,MAAM,EAAGQ,EAAWD,EAAQ9B,OAAS,GAElE,OAA4B,IAAxBiC,EAAajC,QAEb,SAAChD,EAAA,EAAD,CAAcZ,QAAM,EAApB,SAAqB,qDAMvB,iCACE,SAACwF,EAAD,UACGK,EAAapD,KAAI,SAAAG,GAAG,OACnB,SAAC,EAAD,CAASA,IAAKA,GAAUA,EAAIC,GAAKD,EAAI1C,QADlB,OAIrByF,GAAYD,EAAQ9B,OAAS,IAC7B,SAAC6B,EAAD,CAAalF,KAAK,SAASuD,QAAS8B,EAApC,SAAiD,gBAMxD,C","sources":["components/Card/Card.styled.jsx","components/Catalog/Catalog.styled.jsx","components/Catalog/Filter.styled.jsx","components/Catalog/filterSchema.js","data/filter.js","helpers/formatMileage.js","components/Catalog/Filter.jsx","components/Empty/Empty.styled.jsx","components/Empty/Empty.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Card/CardModal.styled.jsx","components/Card/CarDetails.jsx","components/Card/CardModal.jsx","components/Card/Card.jsx","components/List/List.styled.jsx","components/List/List.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { colors, transition } from 'styles/common/vars';\n\nexport const CardItem = styled.li`\n  position: relative;\n  width: 274px;\n`;\n\nexport const AddToWishlistBtn = styled.button`\n  position: absolute;\n  margin: 0;\n  padding: 0;\n  top: 14px;\n  right: 14px;\n  width: 18px;\n  height: 18px;\n  font-size: 18px;\n\n  color: ${colors.primaryWhite};\n  background-color: transparent;\n  border: none;\n\n  transition: color ${transition.duration};\n\n  &:hover,\n  &:focus {\n    color: ${colors.accentHoverColor};\n  }\n`;\n\nexport const CardImage = styled.img`\n  width: 100%;\n  height: 268px;\n  margin-bottom: 14px;\n\n  border-radius: 14px;\n  object-fit: cover;\n`;\n\nexport const CardTopWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  margin-bottom: 8px;\n\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n`;\n\nexport const CardTitle = styled.h3`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n\n  span {\n    color: ${colors.accentColor};\n  }\n`;\n\nexport const CardPrice = styled.h4`\n  font-weight: 500;\n`;\n\nexport const CardDetailsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  row-gap: 4px;\n  column-gap: 6px;\n\n  margin-bottom: ${({ marginBottom }) => marginBottom || '28px'};\n\n  font-size: 12px;\n  line-height: 1.5;\n`;\n\nexport const CardDetailsItem = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  color: ${colors.secondaryFontColor};\n\n  &:not(:last-child) {\n    &::after {\n      content: '';\n      display: inline-block;\n      margin: 0;\n      width: 1px;\n      height: 16px;\n      background-color: ${colors.primaryFontColor};\n      opacity: 0.1;\n    }\n  }\n`;\n\nexport const LearnMoreButton = styled.button`\n  padding: 12px 98px;\n\n  border-radius: 12px;\n  text-align: center;\n\n  border: none;\n\n  color: ${colors.primaryWhite};\n  background-color: ${colors.accentColor};\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.42;\n\n  transition: background-color ${transition.duration};\n\n  &:hover,\n  &:focus {\n    background-color: ${colors.accentHoverColor};\n  }\n`;\n","import styled from '@emotion/styled';\nimport { colors } from 'styles/common/vars';\n\nexport const CatalogSection = styled.section`\n  padding: 150px 0;\n  width: 100%;\n  min-height: 100dvh;\n\n  color: ${colors.primaryFontColor};\n  background-color: ${colors.primaryWhite};\n`;\n","import styled from '@emotion/styled';\nimport { LearnMoreButton } from 'components/Card/Card.styled';\nimport { colors } from 'styles/common/vars';\n\nexport const FilterForm = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-bottom: 50px;\n  gap: 18px;\n`;\n\nexport const FormLabel = styled.label`\n  display: block;\n  margin-bottom: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.28;\n  color: ${colors.labelFontColor};\n`;\n\nexport const FormInput = styled.input`\n  padding: 14px 18px;\n  border-radius: 14px;\n\n  border: none;\n  background-color: ${colors.inputBgGrayColor};\n\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.11;\n\n  &::placeholder {\n    color: ${colors.primaryFontColor};\n  }\n`;\n\nexport const DataList = styled.datalist`\n  width: 100%;\n  background-color: ${colors.primaryWhite};\n`;\n\nexport const BeforeInputWrapper = styled.div`\n  position: relative;\n  display: inline-block;\n\n  span {\n    position: absolute;\n    top: 14px;\n    left: ${({ paddingLeft }) => paddingLeft || '24px'};\n\n    font-size: 18px;\n    font-weight: 500;\n    line-height: 1.1;\n  }\n`;\n\nexport const MileageInput = styled(FormInput)`\n  width: 160px;\n  padding-left: 70px;\n\n  &.from {\n    border-top-right-radius: 0px;\n    border-bottom-right-radius: 0px;\n    border-right: 1px solid ${colors.mileageInputBorderColor};\n  }\n\n  &.to {\n    border-top-left-radius: 0px;\n    border-bottom-left-radius: 0px;\n  }\n`;\n\nexport const SubmitButton = styled(LearnMoreButton)`\n  align-self: flex-end;\n  height: 48px;\n  padding: 14px 44px;\n`;\n","import * as yup from 'yup';\n\nexport const validationSchema = yup.object().shape({\n  brand: yup.string('Brand name must be a string').notRequired(),\n  price: yup.string('Price must be a string').notRequired(),\n  mileageFrom: yup.string('Mileage must be a string').notRequired(),\n  mileageTo: yup.string('Mileage must be a string').notRequired(),\n});","import makes from 'data/makes.json';\n\nexport const brands = makes.map(make => ({ value: make, label: make }));\nexport const pricesPerHour = [\n  { value: 10, label: 10 },\n  { value: 20, label: 20 },\n  { value: 30, label: 30 },\n  { value: 40, label: 40 },\n  { value: 50, label: 50 },\n  { value: 60, label: 60 },\n  { value: 70, label: 70 },\n  { value: 80, label: 80 },\n  { value: 90, label: 90 },\n  { value: 100, label: 100 },\n];","export const getClearNumber = value => {\n  return Number(value.replace(',', ''));\n};\n\nexport const formatMileage = value => {\n  const noCommaValue = getClearNumber(value);\n\n  if (!noCommaValue || value === '') {\n    return '';\n  }\n\n  return Number(noCommaValue).toLocaleString('en-US');\n};","import Select from 'react-select';\nimport {\n  FilterForm,\n  FormLabel,\n  MileageInput,\n  BeforeInputWrapper,\n  SubmitButton,\n} from './Filter.styled';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useController, useForm } from 'react-hook-form';\nimport { validationSchema } from './filterSchema';\nimport { brands, pricesPerHour } from 'data/filter';\nimport { formatMileage, getClearNumber } from 'helpers/formatMileage';\n\nconst Filter = ({ cars, setFiltered }) => {\n  const { register, handleSubmit, control, getValues, setValue } = useForm({\n    defaultValues: { brand: '', price: '', mileageFrom: '', mileageTo: '' },\n    resolver: yupResolver(validationSchema),\n  });\n  const {\n    field: { value: brandValue, onChange: brandChange, ...brandAttrs },\n  } = useController({ name: 'brand', control });\n  const {\n    field: { value: priceValue, onChange: priceChange, ...priceAttrs },\n  } = useController({ name: 'price', control });\n\n  const onSubmit = ({ price, brand, mileageFrom = 0, mileageTo }) =>\n    setFiltered(\n      cars\n        .filter(({ make }) => (brand ? make === brand : make))\n        .filter(({ rentalPrice }) => {\n          if (!price) return rentalPrice;\n          rentalPrice = Number(rentalPrice.replace('$', ''));\n          price = Number(price);\n\n          return rentalPrice <= price;\n        })\n        .filter(({ mileage }) => mileage > getClearNumber(mileageFrom))\n        .filter(({ mileage }) =>\n          mileageTo ? mileage < getClearNumber(mileageTo) : mileage\n        )\n    );\n\n  return (\n    <FilterForm onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"filter-brand\">\n        <FormLabel>Car brand</FormLabel>\n        <Select\n          {...brandAttrs}\n          classNamePrefix=\"filter-select\"\n          onChange={({ value }) => brandChange(value)}\n          options={brands}\n          placeholder=\"Enter the text\"\n        />\n      </div>\n      <div className=\"filter-price\">\n        <FormLabel>Price / 1 hour</FormLabel>\n        <BeforeInputWrapper paddingLeft=\"18px\">\n          <Select\n            {...priceAttrs}\n            classNamePrefix=\"filter-select\"\n            onChange={({ value }) => priceChange(value)}\n            options={pricesPerHour}\n            placeholder=\"\"\n          />\n          <span>To $</span>\n        </BeforeInputWrapper>\n      </div>\n      <div>\n        <FormLabel>Car mileage / km</FormLabel>\n        <BeforeInputWrapper>\n          <MileageInput\n            {...register('mileageFrom')}\n            className=\"from\"\n            type=\"text\"\n            min={0}\n            max={getClearNumber(getValues().mileageTo) || null}\n            maxLength={7}\n            onChange={({ target }) =>\n              setValue('mileageFrom', formatMileage(target.value))\n            }\n          />\n          <span>From</span>\n        </BeforeInputWrapper>\n        <BeforeInputWrapper>\n          <MileageInput\n            {...register('mileageTo')}\n            className=\"to\"\n            type=\"text\"\n            min={getClearNumber(getValues().mileageFrom) || 0}\n            maxLength={7}\n            onChange={({ target }) =>\n              setValue('mileageTo', formatMileage(target.value))\n            }\n          />\n          <span>To</span>\n        </BeforeInputWrapper>\n      </div>\n      <SubmitButton type=\"submit\">Search</SubmitButton>\n    </FilterForm>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\nimport { colors } from 'styles/common/vars';\n\nexport const Empty = styled.section`\n  padding: 50px 0;\n  text-align: center;\n  color: ${colors.primaryFontColor};\n`;\n\nexport const EmptyDescription = styled.p`\n  margin-top: 24px;\n  font-size: 18px;\n`;\n","import { GiEmptyHourglass } from 'react-icons/gi';\nimport { SiAmazoncloudwatch } from 'react-icons/si';\nimport { Empty, EmptyDescription } from './Empty.styled';\n\nconst EmptySection = ({ children, filter = false }) => {\n  return (\n    <Empty>\n      {filter ? (\n        <SiAmazoncloudwatch size={100} />\n      ) : (\n        <GiEmptyHourglass size={100} />\n      )}\n      <EmptyDescription>{children}</EmptyDescription>\n    </Empty>\n  );\n};\n\nexport default EmptySection;\n","import styled from '@emotion/styled';\nimport { colors } from 'styles/common/vars';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1;\n\n  width: 100dvw;\n  height: 100dvh;\n\n  padding: 0 20px;\n  overflow-y: scroll;\n\n  background-color: ${colors.secondaryFontColor};\n  backdrop-filter: blur(4px);\n`;\n\nexport const ModalWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  padding: 40px;\n\n  width: 541px;\n  max-height: 95dvh;\n\n  overflow-y: auto;\n\n  border-radius: 24px;\n\n  color: ${colors.primaryFontColor};\n  background-color: ${colors.primaryWhite};\n`;\n","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport { Backdrop, ModalWrapper } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ children, toggleModal }) => {\n  const handleToggleModal = event => {\n    const isEventModalControlElement =\n      event.target.dataset?.backdrop || event.code === 'Escape';\n\n    if (isEventModalControlElement) {\n      toggleModal();\n      return;\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleToggleModal);\n    window.addEventListener('click', handleToggleModal);\n    return () => {\n      window.removeEventListener('keydown', handleToggleModal);\n      window.removeEventListener('click', handleToggleModal);\n    };\n  });\n\n  return createPortal(\n    <Backdrop data-backdrop>\n      <ModalWrapper>{children}</ModalWrapper>\n    </Backdrop>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import styled from '@emotion/styled';\nimport { colors, transition } from 'styles/common/vars';\nimport { CardTitle } from './Card.styled';\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n\n  margin: 0;\n  padding: 0;\n\n  border: none;\n  background-color: transparent;\n\n  transition: color ${transition.duration};\n\n  &:hover,\n  &:focus {\n    color: ${colors.accentHoverColor};\n  }\n`;\n\nexport const CarImage = styled.img`\n  width: 100%;\n  height: 248px;\n  object-fit: cover;\n\n  border-radius: 14px;\n\n  margin-bottom: 14px;\n`;\n\nexport const CarTitle = styled(CardTitle)`\n  font-size: 18px;\n  line-height: 1.33;\n`;\n\nexport const CarDescription = styled.p`\n  margin-bottom: 24px;\n\n  line-height: 1.42;\n`;\n\nexport const InfoBlockTitle = styled.h4`\n  font-weight: 500;\n  line-height: 1.42;\n  margin-bottom: 8px;\n`;\n\nexport const ConditionsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 24px;\n  gap: 8px;\n`;\n\nexport const ConditionsItem = styled.li`\n  padding: 7px 14px;\n\n  border-radius: 35px;\n  font-size: 12px;\n  background-color: ${colors.conditionsBgGrayColor};\n\n  font-family: 'Montserrat', sans-serif;\n\n  span {\n    color: ${colors.accentColor};\n    font-weight: 600;\n  }\n`;\n\nexport const RentalLink = styled.a`\n  display: block;\n  width: 168px;\n  padding: 12px 50px;\n\n  border-radius: 12px;\n  text-align: center;\n\n  border: none;\n\n  color: ${colors.primaryWhite};\n  background-color: ${colors.accentColor};\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.42;\n\n  transition: background-color ${transition.duration};\n\n  &:hover,\n  &:focus {\n    background-color: ${colors.accentHoverColor};\n  }\n`;\n","import { CardDetailsList, CardDetailsItem } from './Card.styled';\n\nconst CarDetailsList = ({ listData, marginBottom = '28px' }) => {\n  return (\n    <CardDetailsList marginBottom={marginBottom}>\n      {listData.map((item, index) => (\n        <CardDetailsItem key={item + index}>{item}</CardDetailsItem>\n      ))}\n    </CardDetailsList>\n  );\n};\n\nexport default CarDetailsList;\n","import Modal from 'components/Modal/Modal';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport {\n  CarDescription,\n  CarImage,\n  CarTitle,\n  CloseButton,\n  ConditionsItem,\n  ConditionsList,\n  InfoBlockTitle,\n  RentalLink,\n} from './CardModal.styled';\nimport { CardTopWrapper } from './Card.styled';\nimport CarDetailsList from './CarDetails';\n\nconst CardModal = ({\n  car: {\n    id,\n    make,\n    img,\n    mileage,\n    photoLink,\n    description,\n    rentalConditions,\n    rentalPrice,\n    engineSize,\n    fuelConsumption,\n    type,\n    accessories,\n    functionalities,\n    model,\n    address,\n    year,\n  },\n  toggleModal,\n}) => {\n  const addressSplitted = address.split(', ');\n\n  const carDetails = [\n    addressSplitted[addressSplitted.length - 2],\n    addressSplitted[addressSplitted.length - 1],\n    `Id: ${id}`,\n    `Year: ${year}`,\n    `Type: ${type}`,\n    `Fuel Consumption: ${fuelConsumption}`,\n    `Engine size: ${engineSize}`,\n  ];\n\n  const conditionsData = [\n    ...rentalConditions.split('\\n'),\n    `Mileage:${mileage}`,\n    `Price:${rentalPrice}`,\n  ];\n\n  return (\n    <Modal toggleModal={toggleModal}>\n      <CloseButton type=\"button\" onClick={toggleModal}>\n        <AiOutlineClose size={24} />\n      </CloseButton>\n      <CarImage src={photoLink || img} />\n      <CardTopWrapper>\n        <CarTitle>\n          {make}\n          <span> {model}</span>, {year}\n        </CarTitle>\n      </CardTopWrapper>\n      <CarDetailsList listData={carDetails} marginBottom=\"14px\" />\n      <CarDescription>{description}</CarDescription>\n      <InfoBlockTitle>Accessories and functionalities:</InfoBlockTitle>\n      <CarDetailsList\n        listData={[...accessories, ...functionalities]}\n        marginBottom=\"24px\"\n      />\n      <InfoBlockTitle>Rental Conditions:</InfoBlockTitle>\n      <ConditionsList>\n        {conditionsData.map(condition => {\n          const [key, value] = condition.split(':');\n          return (\n            <ConditionsItem key={key}>\n              {key}{' '}\n              {value && (\n                <>\n                  : <span>{value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}</span>\n                </>\n              )}\n            </ConditionsItem>\n          );\n        })}\n      </ConditionsList>\n      <RentalLink href=\"tel:+380730000000\">Rental car</RentalLink>\n    </Modal>\n  );\n};\n\nexport default CardModal;\n","import { useCars } from 'context/context';\nimport { AiOutlineHeart, AiFillHeart } from 'react-icons/ai';\nimport {\n  AddToWishlistBtn,\n  CardImage,\n  CardItem,\n  CardPrice,\n  CardTitle,\n  CardTopWrapper,\n  LearnMoreButton,\n} from './Card.styled';\nimport { colors } from 'styles/common/vars';\nimport { useState } from 'react';\nimport CardModal from './CardModal';\nimport CarDetailsList from './CarDetails';\n\nconst bodyClassList = document.querySelector('body').classList;\n\nconst CarCard = ({\n  car: {\n    id,\n    make,\n    img,\n    mileage,\n    photoLink,\n    rentalCompany,\n    rentalPrice,\n    type,\n    functionalities,\n    model,\n    address,\n    year,\n  },\n  car,\n}) => {\n  const { wishlist, reducer } = useCars();\n  const [openLearnMore, setOpenLearnMore] = useState(false);\n  const isFavorite = wishlist.find(car => car.id === id);\n\n  const toggleLearnMore = () => {\n    setOpenLearnMore(prev => {\n      if (prev) {\n        bodyClassList.remove('is-open');\n      } else {\n        bodyClassList.add('is-open');\n      }\n\n      return !prev;\n    });\n  };\n\n  const toggleFavorite = () => {\n    if (!isFavorite) {\n      reducer('wishlist/add', car);\n    } else {\n      reducer('wishlist/remove', car.id);\n    }\n  };\n\n  const addressSplitted = address.split(', ');\n\n  const carDetails = [\n    addressSplitted[addressSplitted.length - 2],\n    addressSplitted[addressSplitted.length - 1],\n    rentalCompany,\n    type,\n    model,\n    mileage,\n    functionalities[0].split(' ').slice(0, 1).join(' '),\n  ];\n\n  return (\n    <CardItem>\n      <AddToWishlistBtn type=\"button\" onClick={toggleFavorite}>\n        {isFavorite ? (\n          <AiFillHeart color={colors.accentColor} size={22} />\n        ) : (\n          <AiOutlineHeart size={22} />\n        )}\n      </AddToWishlistBtn>\n      <CardImage src={photoLink || img} alt={make} width={274} />\n      <CardTopWrapper>\n        <CardTitle>\n          {make}\n          <span> {model}</span>, {year}\n        </CardTitle>\n        <CardPrice>{rentalPrice}</CardPrice>\n      </CardTopWrapper>\n      <CarDetailsList listData={carDetails} />\n      <LearnMoreButton type=\"button\" onClick={toggleLearnMore}>\n        Learn more\n      </LearnMoreButton>\n      {openLearnMore && <CardModal car={car} toggleModal={toggleLearnMore} />}\n    </CardItem>\n  );\n};\n\nexport default CarCard;\n","import styled from '@emotion/styled';\nimport { colors, transition } from 'styles/common/vars';\n\nexport const ItemsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 29px;\n  row-gap: 50px;\n`;\n\nexport const LoadMoreBtn = styled.button`\n  display: block;\n  margin: 100px auto 0;\n  padding: 0;\n  border: none;\n  background-color: transparent;\n\n  color: ${colors.accentColor};\n  font-size: 16px;\n  line-height: 1.5;\n  font-weight: 500;\n  text-decoration: underline;\n\n  transition: color ${transition.duration};\n\n  &:hover,\n  &:focus {\n    color: ${colors.accentHoverColor};\n  }\n`;\n","import CarCard from 'components/Card/Card';\nimport { ItemsList, LoadMoreBtn } from './List.styled';\nimport { useState } from 'react';\nimport EmptySection from 'components/Empty/Empty';\n\nconst CarsList = ({ allCars }) => {\n  const [loadMore, setLoadMore] = useState(false);\n\n  const carsToRender = allCars.slice(0, loadMore ? allCars.length : 8);\n\n  if (carsToRender.length === 0)\n    return (\n      <EmptySection filter>\n        No cars were found for your request, try again!\n      </EmptySection>\n    );\n\n  return (\n    <>\n      <ItemsList>\n        {carsToRender.map(car => (\n          <CarCard car={car} key={car.id + car.mileage} />\n        ))}\n      </ItemsList>\n      {!loadMore && allCars.length > 8 && (\n        <LoadMoreBtn type=\"button\" onClick={setLoadMore}>\n          Load more\n        </LoadMoreBtn>\n      )}\n    </>\n  );\n};\n\nexport default CarsList;\n"],"names":["CardItem","styled","AddToWishlistBtn","colors","transition","CardImage","CardTopWrapper","CardTitle","CardPrice","CardDetailsList","marginBottom","CardDetailsItem","LearnMoreButton","CatalogSection","FilterForm","FormLabel","FormInput","BeforeInputWrapper","paddingLeft","MileageInput","SubmitButton","validationSchema","yup","shape","brand","notRequired","price","mileageFrom","mileageTo","brands","makes","make","value","label","pricesPerHour","getClearNumber","Number","replace","formatMileage","noCommaValue","toLocaleString","cars","setFiltered","useForm","defaultValues","resolver","yupResolver","register","handleSubmit","control","getValues","setValue","useController","name","field","brandChange","onChange","brandAttrs","priceChange","priceAttrs","onSubmit","filter","rentalPrice","mileage","className","classNamePrefix","options","placeholder","type","min","max","maxLength","target","Empty","EmptyDescription","children","size","Backdrop","ModalWrapper","modalRoot","document","querySelector","toggleModal","handleToggleModal","event","dataset","backdrop","code","useEffect","window","addEventListener","removeEventListener","createPortal","CloseButton","CarImage","CarTitle","CarDescription","InfoBlockTitle","ConditionsList","ConditionsItem","RentalLink","listData","map","item","index","car","id","img","photoLink","description","rentalConditions","engineSize","fuelConsumption","accessories","functionalities","model","address","year","addressSplitted","split","carDetails","length","conditionsData","onClick","src","CarDetails","condition","key","href","bodyClassList","classList","rentalCompany","useCars","wishlist","reducer","useState","openLearnMore","setOpenLearnMore","isFavorite","find","toggleLearnMore","prev","remove","add","slice","join","color","alt","width","ItemsList","LoadMoreBtn","allCars","loadMore","setLoadMore","carsToRender"],"sourceRoot":""}